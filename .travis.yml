sudo: required
dist: trusty
language: generic

env:
  global:
    - /usr/local/bin:$PATH

# Use Linux unless specified
os: linux

before_install:
  - sudo apt-get update -qy
  - sudo apt-get remove -qy cmake

matrix:
  include:
#  - compiler: gcc
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - g++-6
#    env:
#      - COMPILER=g++-6
#      - CC=gcc-6 CXX=g++-6
#  - compiler: gcc
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - g++-7
#    env:
#      - COMPILER=g++-7
#      - CC=gcc-7 CXX=g++-7
#  - compiler: clang
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-precise-3.8
#        packages:
#          - clang-3.8
#          - libc++-dev
#          - libc++abi-dev
#    env:
#      - COMPILER=clang++-3.8
#      - CC=clang-3.8 CXX=clang++-3.8
#  - compiler: clang
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-precise-3.9
#        packages:
#          - clang-3.9
#          - libc++-dev
#          - libc++abi-dev
#    env:
#      - COMPILER=clang++-3.9
#      - CC=clang-3.9 CXX=clang++-3.9
#  - compiler: clang
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-4.0
#        packages:
#          - clang-4.0
#          - libc++-dev
#          - libc++abi-dev
#    env:
#      - COMPILER=clang++-4.0
#      - CC=clang-4.0 CXX=clang++-4.0
#  - compiler: clang
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-5.0
#        packages:
#          - clang-5.0
#          - libc++-dev
#          - libc++abi-dev
#    env:
#      - COMPILER=clang++-5.0
#      - CC=clang-5.0 CXX=clang++-5.0
  - os: osx
    osx_image: xcode9.1
    compiler: clang
    before_install:
      - brew update
      - brew install --with-clang llvm
    env: COMPILER=clang++

install:
  ############################################################################
  # All the Linux dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Setup default versions and override CXX set by Travis if needed
  ############################################################################
  - if [[ "${COMPILER}" == "default" ]]; then COMPILER=clang++-4.0; fi
  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.64.0; fi

  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
  - ${CXX} --version

  ############################################################################
  # Install CMake
  ############################################################################
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      CMAKE_INSTALLER=install-cmake.sh;
      curl -sSL https://cmake.org/files/v3.9/cmake-3.9.6-Linux-x86_64.sh -o ${CMAKE_INSTALLER};
      chmod +x ${CMAKE_INSTALLER};
      sudo ./${CMAKE_INSTALLER} --prefix=/usr/local --skip-license;
    else
      brew outdated cmake || brew upgrade cmake;
    fi

#  ############################################################################
#  # Install libc++ and libc++abi if needed
#  ############################################################################
#  - |
#    if [[ "${CXX%%+*}" == "clang" ]]; then
#      if   [[ "${CXX}" == "clang++-3.8" ]]; then LLVM_VERSION="3.8.1";
#      elif [[ "${CXX}" == "clang++-3.9" ]]; then LLVM_VERSION="3.9.1";
#      elif [[ "${CXX}" == "clang++-4.0" ]]; then LLVM_VERSION="4.0.0";
#      elif [[ "${CXX}" == "clang++-5.0" ]]; then LLVM_VERSION="5.0.0";
#      fi
#      LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
#      LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
#      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
#      mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
#      travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
#      travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
#      travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi
#      (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install)
#      (cd llvm/build/projects/libcxx && make install -j2)
#      (cd llvm/build/projects/libcxxabi && make install -j2)
#      export CXXFLAGS="-isystem ${DEPS_DIR}/llvm/install/include/c++/v1"
#      export LDFLAGS="-L ${DEPS_DIR}/llvm/install/lib -l c++ -l c++abi"
#      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/llvm/install/lib"
#    fi

  ############################################################################
  # Install Boost
  ############################################################################
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      BOOST_VERSION=1.65.1
      BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
      BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
      mkdir -p ${BOOST_DIR}
      travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}
      cd ${BOOST_DIR}/tools/build && ./bootstrap.sh && ./b2 install --prefix=${DEPS_DIR}/b2
      export PATH=${DEPS_DIR}/b2/bin:${PATH}
      cd ${BOOST_DIR}
      if [[ "${CXX%%+*}" == "clang" ]]; then
        b2 toolset=clang cxxflags="-std=c++11 -stdlib=libc++" linkflags="-stdlib=libc++" --without-python --without-mpi
      else
        b2 toolset=gcc cxxflags="-std=c++11" --without-python --without-mpi
      fi
      export BOOST_ROOT=${BOOST_DIR}
    else
      brew outdated boost || brew upgrade boost;
    fi

  ############################################################################
  # Install Python3
  ############################################################################
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get install python3 -qy;
    else
      brew upgrade python;
    fi

  ############################################################################
  # Install htslib
  ############################################################################
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      git clone https://github.com/samtools/htslib.git;
      cd htslib && autoheader && autoconf && ./configure && make && sudo make install;
    else
      brew install htslib;
    fi

before_script:
  - cd "${TRAVIS_BUILD_DIR}"
  - cmake --version
  - echo "PATH = " ${PATH};
  - echo "BOOST_ROOT = " ${BOOST_ROOT};

script:
  - ./scripts/install.py --cxx_compiler=${COMPILER}

notifications:
  email: false